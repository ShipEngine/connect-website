name: Manage Releases

on:
  issue_comment:
    types:
      - created

jobs:
  release:
    if: github.event.issue.pull_request && github.event.issue.user.id == github.event.comment.user.id && github.event.comment.body.startsWith('release')
    name: Prepare Release
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - id: validate
        name: Validate Inputs
        env:
          COMMENT: ${{ github.event.comment.body }}
        run: |
          set -x
          IFS=' '
          read -ra words <<< "${COMMENT}"
          set -- "${words[@]}"
          shift
          package_name=$1
          shift
          release_type=${1:-patch}
          echo "::set-output name=package_name::${package_name}"
          echo "::set-output name=release_type::${release_type}"
          [[ -n "${package_name}" ]] && [[ "$(ls packages)" =~ "${package_name}" ]]
        shell: bash

      - name: Checkout source
        uses: actions/checkout@v2
        if: steps.validate.conclusion == 'success'

      - name: Install Node
        uses: actions/setup-node@v2
        if: steps.validate.conclusion == 'success'
        with:
          always-auth: true
          node-version: 14

      - name: Install dependencies
        if: steps.validate.conclusion == 'success'
        run: yarn install --frozen-lockfile

      - name: Increment version
        if: steps.validate.conclusion == 'success'
        working-directory: packages/${{ env.PACKAGE_NAME }}
        run: |
          # Configure git for commits
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          # Increment package version
          yarn run release
        env:
          PACKAGE_NAME: ${{ steps.validate.outputs.package_name }}
          NPM_CONFIG_RELEASE_TYPE: ${{ steps.validate.outputs.release_type }}
