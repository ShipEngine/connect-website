apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-deploy
  annotations:
    release/version: {{ printf "%s.%s" .Chart.Name .Chart.Version }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name | quote }}
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name | quote }}
    spec:
      restartPolicy: Always
      containers:
      - name: {{ printf "%s" .Chart.Name }}
        image: {{ printf "%s/%s:%s" .Values.image.repository .Chart.Name .Chart.Version | quote }}

        ports:
        - containerPort: {{ .Values.service.port }}

        envFrom:
        - configMapRef:
            name: {{ template "fullname" . }}-config
        {{ if .Values.secret }}
        - secretRef:
            name: {{ template "fullname" . }}-secret
        {{ end }}

        resources:
          requests:
            memory: {{ .Values.resources.memory.request | quote}}
            cpu: {{ .Values.resources.cpu.request | quote}}
          limits:
            memory: {{ .Values.resources.memory.limit | quote}}
            cpu: {{ .Values.resources.cpu.limit | quote}}

        readinessProbe:
          httpGet:
            path: {{ .Values.service.healthcheck }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: 30
          timeoutSeconds: 10

        livenessProbe:
          httpGet:
            path: {{ .Values.service.healthcheck }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: 30
          timeoutSeconds: 10
