(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[333],{7388:function(e,n,t){"use strict";t.r(n),t.d(n,{title:function(){return l},description:function(){return m},createdAt:function(){return p},modifiedAt:function(){return d},default:function(){return g}});var a=t(9016),i=t(3104),o=t(6687),r=t(2320),s=t(1783),c=["components"],l=(o.createElement,"cancelShipments Method"),m="This method cancels shipments, which may include voiding labels, refunding charges, invalidating tracking numbers, updating manifests, or anything else that needs to happen when a shipment is canceled.",p=new Date(1653344530651.3293),d=new Date(1653344530651.3293),h=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)}},k=h("CodeWrapper"),u=h("Reference"),w=h("Field"),f=h("Type"),y=h("Description"),T=function(e){return(0,r.kt)(s.Z,(0,i.Z)({title:"cancelShipments Method",description:"This method cancels shipments, which may include voiding labels, refunding charges, invalidating tracking numbers, updating manifests, or anything else that needs to happen when a shipment is canceled.",createdAt:new Date(1653344530651),modifiedAt:new Date(1653344530651)},e))};function g(e){var n=e.components,t=(0,a.Z)(e,c);return(0,r.kt)(T,(0,i.Z)({},t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{markdown:!0},(0,r.kt)("inlineCode",{markdown:!0,parentName:"h1"},"cancelShipments()")),(0,r.kt)("p",{markdown:!0},"This method cancels shipments, which may include voiding labels, refunding charges, invalidating tracking numbers, updating manifests, or anything else that needs to happen when a shipment is canceled."),(0,r.kt)("p",{markdown:!0},"Most carrier applications should implement this method, unless you don't allow shipments to be canceled or voided after creation."),(0,r.kt)("h2",{markdown:!0},"Syntax"),(0,r.kt)(k,{mdxType:"CodeWrapper"},(0,r.kt)("pre",{markdown:!0},(0,r.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function cancelShipments(transaction, shipments) {\n  // Your code here\n}\n")),(0,r.kt)("pre",{markdown:!0},(0,r.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import {\n  Transaction, ShipmentCancellation, ShipmentCancellationOutcome\n} from "@shipengine/connect";\n\nexport default async function cancelShipments(\n  transaction: Transaction,\n  shipments: ShipmentCancellation[]\n): Promise<void | ShipmentCancellationOutcome[]> {\n  // Your code here\n}\n'))),(0,r.kt)("h2",{markdown:!0},"Parameters"),(0,r.kt)("h3",{markdown:!0},(0,r.kt)("inlineCode",{markdown:!0,parentName:"h3"},"transaction")),(0,r.kt)("p",{markdown:!0},"A ",(0,r.kt)("a",{href:"/docs/reference/transaction",markdown:!0,parentName:"p"},"transaction object")," containing information about the transaction and session state."),(0,r.kt)("h3",{markdown:!0},(0,r.kt)("inlineCode",{markdown:!0,parentName:"h3"},"shipments[]")),(0,r.kt)("p",{markdown:!0},"An array of objects that indicate which shipments to cancel. This array will always contain at least one object."),(0,r.kt)("p",{markdown:!0},"Each object has the ",(0,r.kt)("inlineCode",{markdown:!0,parentName:"p"},"trackingNumber")," and ",(0,r.kt)("inlineCode",{markdown:!0,parentName:"p"},"identifiers")," of the shipment being canceled. It also has a ",(0,r.kt)("inlineCode",{markdown:!0,parentName:"p"},"cancellationID")," property, which is the ID of the cancellation request. You'll use this ",(0,r.kt)("inlineCode",{markdown:!0,parentName:"p"},"cancellationID")," to return the outcome of each cancellation, such as whether it was successful, failed, or could not be completed."),(0,r.kt)(u,{mdxType:"Reference"},(0,r.kt)(w,{name:"cancellationID",nullable:!1,mdxType:"Field"},(0,r.kt)(f,{mdxType:"Type"},(0,r.kt)("p",{markdown:!0},(0,r.kt)("a",{href:"https://www.npmjs.com/package/uuid",markdown:!0,parentName:"p"},"UUID"))),(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The unique ID of this cancellation. This ID is used to correlate cancellations with outcomes."))),(0,r.kt)(w,{name:"trackingNumber",type:"string",nullable:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The master tracking number for the entire shipment. For single-piece shipments, this will be the same as the package tracking number. For multi-piece shipments, this may be a separate tracking number, or the same tracking number as one of the packages. This string will not contain newline characters."))),(0,r.kt)(w,{name:"identifiers",nullable:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"Your own identifiers for this shipment cancellation.")),(0,r.kt)(f,{mdxType:"Type"},(0,r.kt)("p",{markdown:!0},(0,r.kt)("a",{href:"/docs/reference/identifiers-object",markdown:!0,parentName:"p"},"identifiers object")))),(0,r.kt)(w,{name:"metadata",type:"object",nullable:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"Custom data about this shipment that was persisted by ShipEngine Connect when this shipment was created. Must be JSON serializable.")))),(0,r.kt)("h2",{markdown:!0},"Return Value"),(0,r.kt)("h3",{markdown:!0},(0,r.kt)("inlineCode",{markdown:!0,parentName:"h3"},"cancellationOutcomes")),(0,r.kt)("p",{markdown:!0},"An array of objects that indicate the outcome of cancelling the shipments. This array will always contain at least one object. You may also choose not to return a value from this method."),(0,r.kt)(u,{mdxType:"Reference"},(0,r.kt)(w,{name:"cancellationID",required:!0,mdxType:"Field"},(0,r.kt)(f,{mdxType:"Type"},(0,r.kt)("p",{markdown:!0},(0,r.kt)("a",{href:"https://www.npmjs.com/package/uuid",markdown:!0,parentName:"p"},"UUID"))),(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The unique ID of this cancellation. This ID is used to correlate the outcome to the cancellation request."))),(0,r.kt)(w,{name:"status",type:"string",required:!0,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The status of the cancellation. Valid values include the following:"),(0,r.kt)("ul",{markdown:!0},(0,r.kt)("li",{markdown:!0,parentName:"ul"},(0,r.kt)("inlineCode",{markdown:!0,parentName:"li"},"success")," - Cancellation was successful."),(0,r.kt)("li",{markdown:!0,parentName:"ul"},(0,r.kt)("inlineCode",{markdown:!0,parentName:"li"},"error")," - Cancellation encountered an error."),(0,r.kt)("li",{markdown:!0,parentName:"ul"},(0,r.kt)("inlineCode",{markdown:!0,parentName:"li"},"timeout")," - Cancellation call timed out, probably related to a network error."),(0,r.kt)("li",{markdown:!0,parentName:"ul"},(0,r.kt)("inlineCode",{markdown:!0,parentName:"li"},"skipped")," - Cancellation was skipped."),(0,r.kt)("li",{markdown:!0,parentName:"ul"},(0,r.kt)("inlineCode",{markdown:!0,parentName:"li"},"throttled")," - Cancellation could not be made because requests are being throttled.")))),(0,r.kt)(w,{name:"confirmationNumber",type:"string",required:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The confirmation number of the cancellation. This string must not contain newline characters."))),(0,r.kt)(w,{name:"code",type:"string",required:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The carrier's code for this cancellation outcome. This string must not contain newline characters."))),(0,r.kt)(w,{name:"description",type:"string",required:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The carrier's description of the cancellation outcome. This description should not be specific to this particular shipment. This string must not contain newline characters."))),(0,r.kt)(w,{name:"notes",type:"object[]",required:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"An array of objects containing additional information about this shipment."))),(0,r.kt)(w,{name:"notes[].type",required:!0,mdxType:"Field"},(0,r.kt)(f,{mdxType:"Type"},(0,r.kt)("p",{markdown:!0},(0,r.kt)("a",{href:"/docs/reference/common-types#notes-types",markdown:!0,parentName:"p"},"notes type string"))),(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The type for this note."))),(0,r.kt)(w,{name:"notes[].text",type:"string",required:!0,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"The note text itself."))),(0,r.kt)(w,{name:"metadata",type:"object",required:!1,mdxType:"Field"},(0,r.kt)(y,{mdxType:"Description"},(0,r.kt)("p",{markdown:!0},"Custom data about this shipment that was persisted by ShipEngine Connect. Must be JSON serializable.")))),(0,r.kt)("h2",{markdown:!0},"Example"),(0,r.kt)(k,{mdxType:"CodeWrapper"},(0,r.kt)("pre",{markdown:!0},(0,r.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function cancelShipments(transaction, shipmentCancellations) {\n  // STEP 1: Validation\n\n  // STEP 2: Create the data that the carrier's API expects\n\n  let data = {\n    operation: \"void_labels\",\n    session_id: transaction.session.id,\n    cancellations: shipmentCancellations.map((cancellation) => {\n      const { cancellationID, trackingNumber } = cancellation;\n      return {\n        cancellationID: cancellationID,\n        internalReferenceID: cancellation.identifiers.internalReferenceID,\n        trackingNumber: trackingNumber,\n      };\n    }),\n  };\n\n  // STEP 3: Call the carrier's API\n  const response = await apiClient.request({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return await formatCancellationResponse(response.data);\n}\n")),(0,r.kt)("pre",{markdown:!0},(0,r.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import {\n  Transaction,\n  ShipmentCancellation,\n  ShipmentCancellationOutcome\n} from "@shipengine/connect";\n\nexport default async function cancelShipments(\n  transaction: Transaction, shipmentCancellations: ShipmentCancellation[]): Promise<void | ShipmentCancellationOutcome> {\n  // STEP 1: Validation\n\n  // STEP 2: Create the data that the carrier\'s API expects\n\n  let data = {\n    operation: "void_labels",\n    session_id: transaction.session.id,\n    cancellations: shipmentCancellations.map((cancellation) => {\n      const { cancellationID, trackingNumber } = cancellation;\n      return {\n        cancellationID: cancellationID,\n        internalReferenceID: cancellation.identifiers.internalReferenceID,\n        trackingNumber: trackingNumber,\n      };\n    }),\n  };\n\n  // STEP 3: Call the carrier\'s API\n  const response = await apiClient.request({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return await formatCancellationResponse(response.data);\n}\n'))))}g.isMDXComponent=!0},3138:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/reference/methods/cancel-shipments",function(){return t(7388)}])}},function(e){e.O(0,[1783,2888,9774,179],(function(){return n=3138,e(e.s=n);var n}));var n=e.O();_N_E=n}]);