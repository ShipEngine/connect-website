(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9626],{7381:function(n,e,a){"use strict";a.r(e),a.d(e,{title:function(){return d},description:function(){return c},createdAt:function(){return k},modifiedAt:function(){return l},default:function(){return w}});var t,o=a(9016),r=a(3104),i=a(6687),m=a(2320),s=a(1783),p=["components"],d=(i.createElement,"Environment Variables for Your ShipEngine Connect app"),c="Learn how to manage environment variables for your ShipEngine Connect application with the ShipEngine Connect CLI",k=new Date(1653338063537.9844),l=new Date(1653338063537.9844),h=(t="Pager",function(n){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.kt)("div",n)}),u=function(n){return(0,m.kt)(s.Z,(0,r.Z)({title:"Environment Variables for Your ShipEngine Connect app",description:"Learn how to manage environment variables for your ShipEngine Connect application with the ShipEngine Connect CLI",createdAt:new Date(1653338063538),modifiedAt:new Date(1653338063538)},n))};function w(n){var e=n.components,a=(0,o.Z)(n,p);return(0,m.kt)(u,(0,r.Z)({},a,{components:e,mdxType:"MDXLayout"}),(0,m.kt)("h1",{markdown:!0},"Managing Environment Variables"),(0,m.kt)("p",{markdown:!0},"One of the key benefits of integrating your service with ",(0,m.kt)("a",{href:"/",markdown:!0,parentName:"p"},"ShipEngine Connect")," is that we will handle\nhosting your application for you. In order for us to do that, ShipEngine Connect may need access to sensitive data,\nsuch as the credentials used to connect to your backend service."),(0,m.kt)("p",{markdown:!0},"You may securely provide such information using the ",(0,m.kt)("a",{href:"./cli#manage-environment-variables",markdown:!0,parentName:"p"},(0,m.kt)("inlineCode",{markdown:!0,parentName:"a"},"connect env")," command"),".\nThis command allows you to define environment variables at the time your application is published that will be injected\ninto your application when it is running in ShipEngine Connect."),(0,m.kt)("p",{markdown:!0},"In addition to storing application secrets, environment variables are useful for storing your configuration data, such\nas the URL for your backend API, so that you can easily switch between environments without making any changes to your\napplication. This is one of the tenets of ",(0,m.kt)("a",{href:"https://12factor.net/",markdown:!0,parentName:"p"},"The Twelve-Factor App"),", which we highly recommend\nconsidering when planning your application."),(0,m.kt)("blockquote",{markdown:!0},(0,m.kt)("p",{markdown:!0,parentName:"blockquote"},(0,m.kt)("strong",{markdown:!0,parentName:"p"},"IMPORTANT:"),"\nYour app will use the environment variable values set at the time it is published. If you makes changes to those\nvariables, you will need to re-publish your app before they take effect in ShipEngine Connect.")),(0,m.kt)("h2",{markdown:!0},"Using the CLI"),(0,m.kt)("p",{markdown:!0},"The ",(0,m.kt)("a",{href:"/docs/cli#manage-environment-variables",markdown:!0,parentName:"p"},"ShipEngine Connect CLI")," provides an ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"env")," command with several subcommands that help you manage the\nenvironment variables available within your application."),(0,m.kt)("blockquote",{markdown:!0},(0,m.kt)("p",{markdown:!0,parentName:"blockquote"},(0,m.kt)("strong",{markdown:!0,parentName:"p"},"PRO TIP:"),"\nYou can leave off the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"env")," part of the command and just specify the subcommand. For example, you can run\n",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect list")," to list the environment variables rather than ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:list"),".")),(0,m.kt)("h3",{markdown:!0},"Setting Environment Variables"),(0,m.kt)("p",{markdown:!0},"The ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:set")," subcommand is used to set one or more environment variables."),(0,m.kt)("h4",{markdown:!0},"Example"),(0,m.kt)("p",{markdown:!0},"This example shows running the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:set")," command and its output."),(0,m.kt)("pre",{markdown:!0},(0,m.kt)("code",{className:"language-bash",markdown:!0,parentName:"pre"},"$ connect env:set MY_VARIABLE=foo my_second_variable=bar\nMY_VARIABLE=foo has been set.\nMY_SECOND_VARIABLE=bar has been set.\n")),(0,m.kt)("blockquote",{markdown:!0},(0,m.kt)("p",{markdown:!0,parentName:"blockquote"},(0,m.kt)("strong",{markdown:!0,parentName:"p"},"NOTE:")," Environment variable names will always be uppercased.")),(0,m.kt)("h3",{markdown:!0},"Getting Specific Environment Variables"),(0,m.kt)("p",{markdown:!0},"The ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:get")," subcommand is used get the value of one or more environment variables. This is useful when you\nhave a lot of environment variables to be able to get the value of the variable(s) of interest."),(0,m.kt)("h4",{markdown:!0},"Example"),(0,m.kt)("p",{markdown:!0},"This example shows running the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:get")," command for the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"MY_VARIABLE")," environment variable."),(0,m.kt)("pre",{markdown:!0},(0,m.kt)("code",{className:"language-bash",markdown:!0,parentName:"pre"},"$ connect env:get my_second_variable\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name        \u2502 Value \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 MY_VARIABLE \u2502 foo   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,m.kt)("h3",{markdown:!0},"Removing an Unwanted Environment Variable"),(0,m.kt)("p",{markdown:!0},"The ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:unset")," command is used to unset one or more environment variables. After running this command,\nthe specified environment variable will no longer be set the next time you publish your app."),(0,m.kt)("h4",{markdown:!0},"Example"),(0,m.kt)("p",{markdown:!0},"This example shows running the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:unset")," command and its output."),(0,m.kt)("pre",{markdown:!0},(0,m.kt)("code",{className:"language-bash",markdown:!0,parentName:"pre"},"$ connect env:unset my_second_variable\nMY_VARIABLE has been removed as an environment variable.\n")),(0,m.kt)("h3",{markdown:!0},"Listing Environment Variables"),(0,m.kt)("p",{markdown:!0},"The ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:list")," command is used to list all the environment variables that are set along with their values."),(0,m.kt)("h4",{markdown:!0},"Example"),(0,m.kt)("p",{markdown:!0},"This example shows running the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:list")," command and its default output."),(0,m.kt)("pre",{markdown:!0},(0,m.kt)("code",{className:"language-bash",markdown:!0,parentName:"pre"},"$ connect env:list\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Name               \u2502 Value   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 MY_SECOND_VARIABLE \u2502 bar     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 MY_VARIABLE        \u2502 foo     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,m.kt)("p",{markdown:!0},"You can use the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"--format")," option to list environment variables in table format or in a format\nfor easy use with ",(0,m.kt)("a",{href:"https://www.npmjs.com/package/dotenv",markdown:!0,parentName:"p"},"dotenv"),"."),(0,m.kt)("h4",{markdown:!0},"Example"),(0,m.kt)("p",{markdown:!0},"This example shows running the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"connect env:list")," command using the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"--format")," option (",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"-f")," for short), specifying the ",(0,m.kt)("inlineCode",{markdown:!0,parentName:"p"},"dotenv")," format."),(0,m.kt)("pre",{markdown:!0},(0,m.kt)("code",{markdown:!0,parentName:"pre"},"$ connect env:list -f dotenv\nMY_SECOND_VARIABLE=bar\nMY_VARIABLE=foo\n")),(0,m.kt)("h3",{markdown:!0},"Accessing Environment Variable"),(0,m.kt)("p",{markdown:!0},"It is easy to access environment variables from within your Node.js application by using the ",(0,m.kt)("a",{href:"https://nodejs.org/api/process.html#process_process_env",markdown:!0,parentName:"p"},(0,m.kt)("inlineCode",{markdown:!0,parentName:"a"},"process.env")," property"),"\nthat is available out-of-the-box with Node.js."),(0,m.kt)("h4",{markdown:!0},"Example"),(0,m.kt)("p",{markdown:!0},"This examples shows how to access an environment variable from within your ShipEngine Connect application."),(0,m.kt)("pre",{markdown:!0},(0,m.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"console.log(`MY_VARIABLE is: ${process.env.MY_VARIABLE}`);\n")),(0,m.kt)(h,{prev:"/docs/typescript",prevTitle:"Developing in Typescript",next:"/docs/error-handling",nextTitle:"Error Handling",mdxType:"Pager"}))}w.isMDXComponent=!0},8696:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/environment-variables",function(){return a(7381)}])}},function(n){n.O(0,[1783,2888,9774,179],(function(){return e=8696,n(n.s=e);var e}));var e=n.O();_N_E=e}]);