(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2649],{2437:function(e,t,n){"use strict";n.r(t),n.d(t,{title:function(){return c},description:function(){return s},createdAt:function(){return k},modifiedAt:function(){return u},default:function(){return b}});var r=n(9016),a=n(3104),i=n(6687),p=n(2320),o=n(1783),d=["components"],c=(i.createElement,"SchedulePickup Method"),s="This method is used to schedule a pickup with a carrier.",k=new Date(1653338888619.7585),u=new Date(1653338888619.7585),m=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,p.kt)("div",t)}},l=m("CodeWrapper"),h=m("Reference"),w=m("Field"),y=m("Type"),f=m("Description"),T=function(e){return(0,p.kt)(o.Z,(0,a.Z)({title:"SchedulePickup Method",description:"This method is used to schedule a pickup with a carrier.",createdAt:new Date(1653338888620),modifiedAt:new Date(1653338888620)},e))};function b(e){var t=e.components,n=(0,r.Z)(e,d);return(0,p.kt)(T,(0,a.Z)({},n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{markdown:!0},(0,p.kt)("inlineCode",{markdown:!0,parentName:"h1"},"SchedulePickup()")),(0,p.kt)("p",{markdown:!0},"This method is used to schedule a pickup with a carrier."),(0,p.kt)("h2",{markdown:!0},"Syntax"),(0,p.kt)(l,{mdxType:"CodeWrapper"},(0,p.kt)("pre",{markdown:!0},(0,p.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function SchedulePickup(request) {\n  // Your code here\n}\n")),(0,p.kt)("pre",{markdown:!0},(0,p.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import { SchedulePickupRequest, SchedulePickupResponse } from "@shipengine/connect-carrier-api";\n\nexport default async function SchedulePickup(\n  request: SchedulePickupRequest\n): Promise<SchedulePickupResponse> {\n  // Your code here\n}\n'))),(0,p.kt)("h2",{markdown:!0},"Parameters"),(0,p.kt)("h3",{markdown:!0},(0,p.kt)("inlineCode",{markdown:!0,parentName:"h3"},"SchedulePickupRequest")),(0,p.kt)("p",{markdown:!0},"An object containing information about the pickup being scheduled."),(0,p.kt)(h,{mdxType:"Reference"},(0,p.kt)(w,{name:"metadata",nullable:!0,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/metadata",markdown:!0,parentName:"p"},"metadata object"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"This object should contain all of the necessary properties needed to make authenticated requests with the carrier.\nEvery property included here will be persisted by ShipEngine Connect and included on each subsequent request from this user."))),(0,p.kt)(w,{name:"location",nullable:!0,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/address#pickup-location-details-object",markdown:!0,parentName:"p"},"pickup location details object"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"Where it's being picked up.\nContact information for the pickup, like an on-duty manager that would be able to oversee the pickup at the location."))),(0,p.kt)(w,{name:"contact",type:"object",nullable:!0,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"Contact information about the person there to meet the driver."))),(0,p.kt)(w,{name:"contact.first_name",type:"string",nullable:!1,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The first name of the person who will be there for the pickup."))),(0,p.kt)(w,{name:"contact.last_name",type:"string",nullable:!0,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The last name of the person who will be there for the pickup."))),(0,p.kt)(w,{name:"contact.email",type:"string",nullable:!1,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The e-mail address of the person who will be there for the pickup."))),(0,p.kt)(w,{name:"contact.phone_number",type:"string",nullable:!1,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The phone number of the person who will be there for the pickup."))),(0,p.kt)(w,{name:"contact.phone_number_extension",type:"string",nullable:!0,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The phone extension of the person who will be there for the pickup."))),(0,p.kt)(w,{name:"pickup_details",type:"object",nullable:!0,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"What is being picked up."))),(0,p.kt)(w,{name:"pickup_details.pickup_service_code",type:"string",nullable:!0,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"Service category for the carrier (ground, express, next_day)."))),(0,p.kt)(w,{name:"pickup_details.shipments",nullable:!0,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/shipped-shipment",markdown:!0,parentName:"p"},"shipped shipment[]"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The shipments that will be picked up."))),(0,p.kt)(w,{name:"requested_pickup_window",nullable:!1,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/pickup-window",markdown:!0,parentName:"p"},"pickup window object"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The time window that the user is requesting for the pickup to be made.")))),(0,p.kt)("h2",{markdown:!0},"Return Value"),(0,p.kt)("h3",{markdown:!0},(0,p.kt)("inlineCode",{markdown:!0,parentName:"h3"},"SchedulePickupResponse")),(0,p.kt)("p",{markdown:!0},"This object model represents the response from a successful schedule pickup request."),(0,p.kt)(h,{mdxType:"Reference"},(0,p.kt)(w,{name:"metadata",required:!1,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/metadata",markdown:!0,parentName:"p"},"metadata object"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"This object should contain all of the necessary properties needed to make authenticated requests with the carrier.\nEvery property included here will be persisted by ShipEngine Connect and included on each subsequent request from this user."))),(0,p.kt)(w,{name:"confirmation",required:!1,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/pickup-confirmation",markdown:!0,parentName:"p"},"pickup confirmation object"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"The confirmation code associated with the successful creation of a pickup."))),(0,p.kt)(w,{name:"pickup_windows",required:!0,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/pickup-window",markdown:!0,parentName:"p"},"pickup window object[]"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"A list of dates and times when the carrier intends to be available to pickup."))),(0,p.kt)(w,{name:"remarks",type:"string",required:!1,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"A custom message returned from the carrier."))),(0,p.kt)(w,{name:"custom_properties",type:"object",required:!1,mdxType:"Field"},(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"A grab bag of custom properties that will be persisted and sent back with the cancel pickup request."))),(0,p.kt)(w,{name:"billing_line_items",required:!1,mdxType:"Field"},(0,p.kt)(y,{mdxType:"Type"},(0,p.kt)("p",{markdown:!0},(0,p.kt)("a",{href:"/docs/beta/reference/billing-line-item",markdown:!0,parentName:"p"},"billing line item object[]"))),(0,p.kt)(f,{mdxType:"Description"},(0,p.kt)("p",{markdown:!0},"Individual Billing Line items for the rate.")))),(0,p.kt)("h2",{markdown:!0},"Example"),(0,p.kt)(l,{mdxType:"CodeWrapper"},(0,p.kt)("pre",{markdown:!0},(0,p.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function SchedulePickup(request) {\n\n  // STEP 1: Validation\n\n  // STEP 2: Create the data that the carrier's API expects\n\n  let data = {\n    operation: \"schedule_pickup\",\n    session_id: request.metadata.id,\n    pickup_time: request.requested_pickup_window,\n    pickup_location: request.location,\n    packages: request.pickup_details.shipments,\n  };\n\n  // STEP 3: Call the carrier's API\n  const response = await apiClient.request({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return formatSchedulePickup(response.data);\n}\n")),(0,p.kt)("pre",{markdown:!0},(0,p.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import {\n  SchedulePickupRequest,\n  SchedulePickupResponse\n} from "@shipengine/connect-carrier-api";\n\nexport default async function SchedulePickup(request: SchedulePickupRequest): Promise<SchedulePickupResponse> {\n\n  // STEP 1: Validation\n\n  // STEP 2: Create the data that the carrier\'s API expects\n  let data: SchedulePickupAPIRequest = {\n    operation: "schedule_pickup",\n    session_id: request.metadata.id,\n    pickup_time: request.requested_pickup_window,\n    pickup_location: request.location,\n    packages: request.pickup_details.shipments,\n  };\n\n  // STEP 3: Call the carrier\'s API\n  const response = await apiClient.request<SchedulePickupAPIResponse>({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return formatSchedulePickup(response.data);\n}\n'))))}b.isMDXComponent=!0},400:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/beta/reference/methods/schedule-pickup",function(){return n(2437)}])}},function(e){e.O(0,[1783,2888,9774,179],(function(){return t=400,e(e.s=t);var t}));var t=e.O();_N_E=t}]);