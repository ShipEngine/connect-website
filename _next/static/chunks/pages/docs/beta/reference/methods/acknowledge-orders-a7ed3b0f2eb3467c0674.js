(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6363],{1543:function(e,n,t){"use strict";t.r(n),t.d(n,{title:function(){return i},description:function(){return m},createdAt:function(){return c},modifiedAt:function(){return k},default:function(){return T}});var r=t(9016),o=t(3104),d=t(6687),a=t(2320),s=t(1783),p=["components"],i=(d.createElement,"AcknowledgeOrders Method"),m="This method is called when an order is imported.",c=new Date(1653338063533.9841),k=new Date(1653338063533.9841),l=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)}},u=l("CodeWrapper"),w=l("Reference"),h=l("Field"),y=l("Type"),f=l("Description"),g=function(e){return(0,a.kt)(s.Z,(0,o.Z)({title:"AcknowledgeOrders Method",description:"This method is called when an order is imported.",createdAt:new Date(1653338063534),modifiedAt:new Date(1653338063534)},e))};function T(e){var n=e.components,t=(0,r.Z)(e,p);return(0,a.kt)(g,(0,o.Z)({},t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h1"},"AcknowledgeOrders()")),(0,a.kt)("p",{markdown:!0},"This method is called when a sales order is imported into one of our e-commerce applications."),(0,a.kt)("h2",{markdown:!0},"Syntax"),(0,a.kt)(u,{mdxType:"CodeWrapper"},(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function AcknowledgeOrders(request) {\n  // Your code here\n}\n")),(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import {\n  AcknowledgeOrdersRequest,\n  AcknowledgeOrdersResponse\n  } from "@shipengine/connect-order-source-api";\n\nexport const AcknowledgeOrders = async (\n  request: AcknowledgeOrdersRequest\n): Promise<AcknowledgeOrdersResponse> => {\n  // Your code here\n}\n'))),(0,a.kt)("h2",{markdown:!0},"Parameters"),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"AcknowledgeOrdersRequest")),(0,a.kt)("p",{markdown:!0},"An object containing parameters to use when acknowledging orders to an order source."),(0,a.kt)(w,{mdxType:"Reference"},(0,a.kt)(h,{name:"orders",nullable:!1,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"#orderacknowledgement",markdown:!0,parentName:"p"},"order acknowledge object[]"))),(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"A list of orders needing to be acknowledged in order to successfully be imported into our system.")))),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"OrderAcknowledgement")),(0,a.kt)("p",{markdown:!0},"An object containing order acknowledge information."),(0,a.kt)(w,{mdxType:"Reference"},(0,a.kt)(h,{name:"order_id",type:"string",nullable:!1,mdxType:"Field"},(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The unique identifier of the sales order from the order source."))),(0,a.kt)(h,{name:"order_number",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The customer facing identifier of the sales order."))),(0,a.kt)(h,{name:"imported_date",type:"string",nullable:!1,mdxType:"Field"},(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The datetime associated with when the sales order was imported. Should always be in UTC and\nformatted per the ",(0,a.kt)("a",{href:"https://tools.ietf.org/html/rfc3339",markdown:!0,parentName:"p"},"https://tools.ietf.org/html/rfc3339")," spec."))),(0,a.kt)(h,{name:"integration_context",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Data provided by the order source that was included in the SalesOrderExport response.")))),(0,a.kt)("h2",{markdown:!0},"Return Value"),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"OrderAcknowledgementResponse[]")),(0,a.kt)(w,{mdxType:"Reference"},(0,a.kt)(h,{name:"responses",nullable:!1,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"#orderacknowledgementresponse",markdown:!0,parentName:"p"},"order acknowledgement response object"))),(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"A list of acknowledgement responses.")))),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"OrderAcknowledgementResponse")),(0,a.kt)(w,{mdxType:"Reference"},(0,a.kt)(h,{name:"order_id",type:"string",required:!0,mdxType:"Field"},(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The unique identifier of the sales order from the order source."))),(0,a.kt)(h,{name:"succeeded",type:"boolean",required:!0,mdxType:"Field"},(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Indicates whether or not we were able to acknowledge our import of the order with the order source."))),(0,a.kt)(h,{name:"failure_reason",type:"string",required:!1,mdxType:"Field"},(0,a.kt)(f,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Additional context for why the acknowledgement failed.")))),(0,a.kt)("h2",{markdown:!0},"Example"),(0,a.kt)(u,{mdxType:"CodeWrapper"},(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"async function AcknowledgeOrders(request) {\n  // STEP 1: Validation\n  // Add any desired validation here\n\n  // STEP 2: Create the data that the order source's API expects\n  const thirdPartyRequest = mapRequest(request);\n  // STEP 3: Call the order source's API\n  const response = await callApi(thirdPartyRequest);\n  // Step 4: Create the output data that ShipEngine expects\n  const mappedResponse = mapResponse(response);\n  return mappedResponse;\n}\n")),(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},"export const AcknowledgeOrders = async (\n  request: AcknowledgeOrdersRequest\n): Promise<AcknowledgeOrdersResponse> => {\n  // STEP 1: Validation\n  // Add any desired validation here\n\n  // STEP 2: Create the data that the order source's API expects\n  const thirdPartyRequest = mapRequest(request);\n  // STEP 3: Call the order source's API\n  const response = await callApi(thirdPartyRequest);\n  // Step 4: Create the output data that ShipEngine expects\n  const mappedResponse = mapResponse(response);\n  return mappedResponse;\n};\n"))))}T.isMDXComponent=!0},7445:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/beta/reference/methods/acknowledge-orders",function(){return t(1543)}])}},function(e){e.O(0,[1783,2888,9774,179],(function(){return n=7445,e(e.s=n);var n}));var n=e.O();_N_E=n}]);