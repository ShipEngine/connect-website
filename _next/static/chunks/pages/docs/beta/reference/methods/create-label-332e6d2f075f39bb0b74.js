(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2177],{5319:function(e,t,a){"use strict";a.r(t),a.d(t,{title:function(){return s},description:function(){return l},createdAt:function(){return m},modifiedAt:function(){return k},default:function(){return T}});var n=a(9016),r=a(3104),i=a(6687),o=a(2320),d=a(1783),p=["components"],s=(i.createElement,"CreateLabel Method"),l="This method creates a new label.",m=new Date(1653338063533.9841),k=new Date(1653338063533.9841),c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}},h=c("CodeWrapper"),u=c("Reference"),w=c("Field"),y=c("Type"),f=c("Description"),b=function(e){return(0,o.kt)(d.Z,(0,r.Z)({title:"CreateLabel Method",description:"This method creates a new label.",createdAt:new Date(1653338063534),modifiedAt:new Date(1653338063534)},e))};function T(e){var t=e.components,a=(0,n.Z)(e,p);return(0,o.kt)(b,(0,r.Z)({},a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{markdown:!0},(0,o.kt)("inlineCode",{markdown:!0,parentName:"h1"},"CreateLabel()")),(0,o.kt)("p",{markdown:!0},"This method creates a new label."),(0,o.kt)("h2",{markdown:!0},"Syntax"),(0,o.kt)(h,{mdxType:"CodeWrapper"},(0,o.kt)("pre",{markdown:!0},(0,o.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function CreateLabel(request) {\n  // Your code here\n}\n")),(0,o.kt)("pre",{markdown:!0},(0,o.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import { CreateLabelRequest, CreateLabelResponse } from "@shipengine/connect-carrier-api";\n\nexport default async function CreateLabel(\n  request: CreateLabelRequest\n): Promise<CreateLabelResponse> {\n  // Your code here\n}\n'))),(0,o.kt)("h2",{markdown:!0},"Parameters"),(0,o.kt)("h3",{markdown:!0},(0,o.kt)("inlineCode",{markdown:!0,parentName:"h3"},"CreateLabelRequest")),(0,o.kt)("p",{markdown:!0},"An object containing information about the new label to create."),(0,o.kt)(u,{mdxType:"Reference"},(0,o.kt)(w,{name:"metadata",nullable:!0,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/metadata",markdown:!0,parentName:"p"},"metadata object"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"This object should contain all of the necessary properties needed to make authenticated requests with the carrier.\nEvery property included here will be persisted by ShipEngine Connect and included on each subsequent request from this user."))),(0,o.kt)(w,{name:"service_code",type:"string",nullable:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Code used to map to what the carrier uses to identify the service."))),(0,o.kt)(w,{name:"ship_datetime",type:"string",nullable:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"When the package is expected to ship. Not guaranteed to be in the future.\nFormatted per the ",(0,o.kt)("a",{href:"https://tools.ietf.org/html/rfc3339",markdown:!0,parentName:"p"},"https://tools.ietf.org/html/rfc3339")," spec. Will always be in UTC."))),(0,o.kt)(w,{name:"confirmation",type:"string",nullable:!0,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/common-types#delivery-confirmation-types",markdown:!0,parentName:"p"},"confirmation type"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The requested ",(0,o.kt)("a",{href:"/docs/beta/reference/common-types",markdown:!0,parentName:"p"},"confirmation"),' for this label.\nIf the field is absent it should be interpreted as "None".'))),(0,o.kt)(w,{name:"label_format",type:"string",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The requested document format for this label."),(0,o.kt)("p",{markdown:!0},"Valid values include the following:"),(0,o.kt)("ul",{markdown:!0},(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"PDF")),(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"ZPL")),(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"PNG"))))),(0,o.kt)(w,{name:"label_layout",type:"string",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The requested label layout for this label."),(0,o.kt)("p",{markdown:!0},"Valid values include the following:"),(0,o.kt)("ul",{markdown:!0},(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"4x6")),(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"letter"))))),(0,o.kt)(w,{name:"is_test_label",type:"boolean",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Whether this request is the result of a test.\nWhen true the request must not result in any financial charges to any party.\nIf the field is absent it should be interpreted as false"))),(0,o.kt)(w,{name:"advanced_options",type:"object",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"This is a schemaless object. It is for open ended customizations unique to particular carriers.\nIf the field is absent it should be interpreted as the default value for any applicable options, e.g. false for booleans."))),(0,o.kt)(w,{name:"insurance_provider",type:"string",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The insurance provider for the insured value of the label,\n",(0,o.kt)("inlineCode",{markdown:!0,parentName:"p"},"carrier")," indicates that the user is requesting insurance from the carrier directly,\nanything else is extra information that should not result in a transaction."),(0,o.kt)("p",{markdown:!0},"Valid values include the following:"),(0,o.kt)("ul",{markdown:!0},(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"None")),(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"Shipstation")),(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"Carrier")),(0,o.kt)("li",{markdown:!0,parentName:"ul"},(0,o.kt)("inlineCode",{markdown:!0,parentName:"li"},"External"))))),(0,o.kt)(w,{name:"is_return_label",type:"boolean",nullable:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Indicates whether the label is a return."))),(0,o.kt)(w,{name:"is_residential",type:"boolean",nullable:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Indicates whether the label is to a residential address."))),(0,o.kt)(w,{name:"packages",nullable:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/package",markdown:!0,parentName:"p"},"package object[]"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"All the packages that make up this shipment. There will always be at least one package defined."))),(0,o.kt)(w,{name:"ship_to",nullable:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/address#shipping-address-object",markdown:!0,parentName:"p"},"shipping address object"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The shipment recipient's address. It may or may not have been validated."))),(0,o.kt)(w,{name:"ship_from",nullable:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/address#shipping-address-object",markdown:!0,parentName:"p"},"shipping address object"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The shipment sender's address. It may or may not have been validated."))),(0,o.kt)(w,{name:"pickup_location",nullable:!0,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/address#pickup-location-object",markdown:!0,parentName:"p"},"pickup location object"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"If this is a pickup shipment, a pickup location will be populated for where the recipient can pickup the shipment."))),(0,o.kt)(w,{name:"ship_from_display",nullable:!0,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/address#shipping-address-object",markdown:!0,parentName:"p"},"shipping address object"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The address that should be displayed as the return address, only if the carrier supports this functionality."))),(0,o.kt)(w,{name:"next_day",type:"boolean",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Indicates whether this shipment is expected to use a next day service class.\nIf the field is absent it should be interpreted as false"))),(0,o.kt)(w,{name:"international",type:"boolean",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Indicates Whether the shipment is international."))),(0,o.kt)(w,{name:"reference",type:"string",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"A user specified free form string to identify this shipment in their own system."))),(0,o.kt)(w,{name:"return_details",type:"object",nullable:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"If the label is for a return, return details should be specified."))),(0,o.kt)(w,{name:"return_details.rma_number",type:"string",nullable:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"A ",(0,o.kt)("a",{href:"https://en.wikipedia.org/wiki/Return_merchandise_authorization",markdown:!0,parentName:"p"},"return merchandise authorization (RMA)")," is an associated number assigned to process the return. This number is often printed on the label and used when the original shipper processes the inbound return. This string will not contain newline characters."))),(0,o.kt)(w,{name:"fulfillment_plan_details",nullable:!0,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/fulfillment-plan-details#fulfillment-plan-details-object",markdown:!0,parentName:"p"},"fulfillment plan details object"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Details regarding the fulfillment plan and/or original sales order, only if the carrier provider requires this info for label generation."))),(0,o.kt)(w,{name:"attachments",nullable:!0,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/document",markdown:!0,parentName:"p"},"document object[]"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Attachments that may be required to be sent to the carrier, in particular customs documents or commercial invoices.")))),(0,o.kt)("h2",{markdown:!0},"Return Value"),(0,o.kt)("h3",{markdown:!0},(0,o.kt)("inlineCode",{markdown:!0,parentName:"h3"},"CreateLabelResponse")),(0,o.kt)("p",{markdown:!0},"This object model represents the response from a successful create label request."),(0,o.kt)(u,{mdxType:"Reference"},(0,o.kt)(w,{name:"metadata",required:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/metadata",markdown:!0,parentName:"p"},"metadata object"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"This object should contain all of the necessary properties needed to make authenticated requests with the carrier.\nEvery property included here will be persisted by ShipEngine Connect and included on each subsequent request from this user."))),(0,o.kt)(w,{name:"transaction_id",type:"string",required:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The transaction ID uniquely represents this request."))),(0,o.kt)(w,{name:"label_download",type:"object",required:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"This object provides the requested label that was just created."))),(0,o.kt)(w,{name:"label_download.label_data",type:"string",required:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The base64 encoded label image."))),(0,o.kt)(w,{name:"form_download",type:"object",required:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"This provides any additional forms that go with the label. For example, customs forms."))),(0,o.kt)(w,{name:"form_download.form_data",type:"string",required:!0,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The base64 encoded form image."))),(0,o.kt)(w,{name:"document",required:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/document",markdown:!0,parentName:"p"},"document object[]"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Shipment level documents should be used if documents are not returned at a package level."),(0,o.kt)("p",{markdown:!0},"DO NOT include duplicate documents intentionally, a document should only be added to the CreateLabelResponse or to the LabelPackage."))),(0,o.kt)(w,{name:"packages",required:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/label-package",markdown:!0,parentName:"p"},"label package object[]"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Package information returned for each requested package in the shipment."),(0,o.kt)("p",{markdown:!0},"Note: The order of the packages returned should match the order of the packages in the request."))),(0,o.kt)(w,{name:"billing_line_items",required:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/billing-line-item",markdown:!0,parentName:"p"},"billing line item object[]"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Individual Billing Line items for the label."))),(0,o.kt)(w,{name:"tracking_number",type:"string",required:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The carrier specific tracking identifier for this shipment; if a multi-package shipment, this should be the lead tracking number."))),(0,o.kt)(w,{name:"trackable",type:"boolean",required:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Indicates whether this shipment can be tracked."))),(0,o.kt)(w,{name:"alternative_identifiers",required:!1,mdxType:"Field"},(0,o.kt)(y,{mdxType:"Type"},(0,o.kt)("p",{markdown:!0},(0,o.kt)("a",{href:"/docs/beta/reference/identifier",markdown:!0,parentName:"p"},"identifier object[]"))),(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"Alternative identifiers associated with this shipment."))),(0,o.kt)(w,{name:"estimated_delivery_datetime",type:"string",required:!1,mdxType:"Field"},(0,o.kt)(f,{mdxType:"Description"},(0,o.kt)("p",{markdown:!0},"The estimated date and time for when the shipment will be delivered.\nFormatted per the ",(0,o.kt)("a",{href:"https://tools.ietf.org/html/rfc3339",markdown:!0,parentName:"p"},"https://tools.ietf.org/html/rfc3339")," spec.")))),(0,o.kt)("h2",{markdown:!0},"Example"),(0,o.kt)(h,{mdxType:"CodeWrapper"},(0,o.kt)("pre",{markdown:!0},(0,o.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function CreateLabel(request) {\n\n  let totalWeight = 0;\n\n  // STEP 1: Validation\n  for (let parcel of request.packages) {\n    if (parcel.weight_details.weight_in_grams > 100000) {\n      throw new Error(`${parcel.package_code} cannot weigh more than 100 kilograms`);\n    }\n\n    totalWeight += parcel.weight_details.weight_in_grams;\n  }\n\n  // STEP 2: Create the data that the carrier's API expects\n  let data = {\n    operation: \"generate_label\",\n    session_id: request.metadata.id,\n    service_code: request.service_code,\n    confirmation_code: request.confirmation,\n    ship_date: request.ship_datetime,\n    from_zone: parseInt(request.ship_from.postal_code, 10),\n    to_zone: parseInt(request.ship_to.postal_code, 10),\n    total_weight: totalWeight,\n  };\n\n  // STEP 3: Call the carrier's API\n  const response = await apiClient.request({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return formatShipment(response.data);\n}\n")),(0,o.kt)("pre",{markdown:!0},(0,o.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import {\n  CreateLabelRequest,\n  CreateLabelResponse\n} from "@shipengine/connect-carrier-api";\n\nexport default async function CreateLabel(request: CreateLabelRequest): Promise<CreateLabelResponse> {\n\n  let totalWeight = 0;\n\n  // STEP 1: Validation\n  for (let parcel of request.packages) {\n    if (parcel.weight_details.weight_in_grams > 100000) {\n      throw new Error(`${parcel.package_code} cannot weigh more than 100 kilograms`);\n    }\n\n    totalWeight += parcel.weight_details.weight_in_grams;\n  }\n\n  // STEP 2: Create the data that the carrier\'s API expects\n  let data: GenerateLabelRequest = {\n    operation: "generate_label",\n    session_id: request.metadata.id,\n    service_code: request.service_code,\n    confirmation_code: request.confirmation,\n    ship_date: request.ship_datetime,\n    from_zone: parseInt(request.ship_from.postal_code, 10),\n    to_zone: parseInt(request.ship_to.postal_code, 10),\n    total_weight: totalWeight,\n  };\n\n  // STEP 3: Call the carrier\'s API\n  const response = await apiClient.request<GenerateLabelResponse>({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return formatShipment(response.data);\n}\n'))))}T.isMDXComponent=!0},3252:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/beta/reference/methods/create-label",function(){return a(5319)}])}},function(e){e.O(0,[1783,2888,9774,179],(function(){return t=3252,e(e.s=t);var t}));var t=e.O();_N_E=t}]);