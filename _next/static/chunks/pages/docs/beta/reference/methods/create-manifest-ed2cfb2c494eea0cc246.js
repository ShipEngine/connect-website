(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4166],{9591:function(e,t,n){"use strict";n.r(t),n.d(t,{title:function(){return p},description:function(){return m},createdAt:function(){return c},modifiedAt:function(){return l},default:function(){return b}});var a=n(9016),r=n(3104),i=n(6687),s=n(2320),o=n(1783),d=["components"],p=(i.createElement,"CreateManifest Method"),m="This method is used to create a manifest.",c=new Date(1653338888619.7585),l=new Date(1653338888619.7585),u=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)}},k=u("CodeWrapper"),h=u("Reference"),f=u("Field"),y=u("Type"),w=u("Description"),T=function(e){return(0,s.kt)(o.Z,(0,r.Z)({title:"CreateManifest Method",description:"This method is used to create a manifest.",createdAt:new Date(1653338888620),modifiedAt:new Date(1653338888620)},e))};function b(e){var t=e.components,n=(0,a.Z)(e,d);return(0,s.kt)(T,(0,r.Z)({},n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{markdown:!0},(0,s.kt)("inlineCode",{markdown:!0,parentName:"h1"},"CreateManifest()")),(0,s.kt)("p",{markdown:!0},"This method is used to create a manifest."),(0,s.kt)("h2",{markdown:!0},"Syntax"),(0,s.kt)(k,{mdxType:"CodeWrapper"},(0,s.kt)("pre",{markdown:!0},(0,s.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function CreateManifest(request) {\n  // Your code here\n}\n")),(0,s.kt)("pre",{markdown:!0},(0,s.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import { CreateManifestRequest, CreateManifestResponse } from "@shipengine/connect-carrier-api";\n\nexport default async function CreateManifest(\n  request: CreateManifestRequest\n): Promise<CreateManifestResponse> {\n  // Your code here\n}\n'))),(0,s.kt)("h2",{markdown:!0},"Parameters"),(0,s.kt)("h3",{markdown:!0},(0,s.kt)("inlineCode",{markdown:!0,parentName:"h3"},"CreateManifestRequest")),(0,s.kt)("p",{markdown:!0},"An object containing information about the labels to manifest."),(0,s.kt)(h,{mdxType:"Reference"},(0,s.kt)(f,{name:"metadata",nullable:!0,mdxType:"Field"},(0,s.kt)(y,{mdxType:"Type"},(0,s.kt)("p",{markdown:!0},(0,s.kt)("a",{href:"/docs/beta/reference/metadata",markdown:!0,parentName:"p"},"metadata object"))),(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"This object should contain all of the necessary properties needed to make authenticated requests with the carrier.\nEvery property included here will be persisted by ShipEngine Connect and included on each subsequent request from this user."))),(0,s.kt)(f,{name:"ship_from",nullable:!0,mdxType:"Field"},(0,s.kt)(y,{mdxType:"Type"},(0,s.kt)("p",{markdown:!0},(0,s.kt)("a",{href:"/docs/beta/reference/address#shipping-address-object",markdown:!0,parentName:"p"},"shipping address object"))),(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The shipment sender's address. It may or may not have been validated."))),(0,s.kt)(f,{name:"included_labels",nullable:!0,mdxType:"Field"},(0,s.kt)(y,{mdxType:"Type"},(0,s.kt)("p",{markdown:!0},(0,s.kt)("a",{href:"/docs/beta/reference/shipped-shipment",markdown:!0,parentName:"p"},"shipped shipment object"))),(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The shipments to include in the manifest. There should be at least one shipment included in a manifest."))),(0,s.kt)(f,{name:"excluded_labels",nullable:!0,mdxType:"Field"},(0,s.kt)(y,{mdxType:"Type"},(0,s.kt)("p",{markdown:!0},(0,s.kt)("a",{href:"/docs/beta/reference/shipped-shipment",markdown:!0,parentName:"p"},"shipped shipment object"))),(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The shipments to exclude from the manifest."))),(0,s.kt)(f,{name:"open_datetime",type:"string",nullable:!0,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The date and time of the earliest shipment being manifested."),(0,s.kt)("p",{markdown:!0},"Formatted per the ",(0,s.kt)("a",{href:"https://tools.ietf.org/html/rfc3339",markdown:!0,parentName:"p"},"https://tools.ietf.org/html/rfc3339")," spec"))),(0,s.kt)(f,{name:"close_datetime",type:"string",nullable:!0,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The date and time of the last shipment being manifested."),(0,s.kt)("p",{markdown:!0},"Formatted per the ",(0,s.kt)("a",{href:"https://tools.ietf.org/html/rfc3339",markdown:!0,parentName:"p"},"https://tools.ietf.org/html/rfc3339")," spec"))),(0,s.kt)(f,{name:"advanced_options",type:"object",nullable:!0,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"This is a schemaless object. It is for open ended customizations unique to particular carriers.\nIf the field is absent it should be interpreted as the default value for any applicable options, e.g. false for booleans.")))),(0,s.kt)("h2",{markdown:!0},"Return Value"),(0,s.kt)("h3",{markdown:!0},(0,s.kt)("inlineCode",{markdown:!0,parentName:"h3"},"CreateManifestResponse")),(0,s.kt)("p",{markdown:!0},"This object model represents the response from a successful create manifest request."),(0,s.kt)(h,{mdxType:"Reference"},(0,s.kt)(f,{name:"metadata",required:!1,mdxType:"Field"},(0,s.kt)(y,{mdxType:"Type"},(0,s.kt)("p",{markdown:!0},(0,s.kt)("a",{href:"/docs/beta/reference/metadata",markdown:!0,parentName:"p"},"metadata object"))),(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"This object should contain all of the necessary properties needed to make authenticated requests with the carrier.\nEvery property included here will be persisted by ShipEngine Connect and included on each subsequent request from this user."))),(0,s.kt)(f,{name:"transaction_id",type:"string",required:!0,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The transaction ID uniquely represents this request."))),(0,s.kt)(f,{name:"manifests",type:"object[]",required:!0,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The manifests created from this request. It should contain either a href or data, but not both."))),(0,s.kt)(f,{name:"manifests[].manifest_id",type:"string",required:!1,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The unique identifier for this manifest."))),(0,s.kt)(f,{name:"manifests[].document_download",type:"object",required:!1,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The resource for where the manifest documentation can be downloaded."))),(0,s.kt)(f,{name:"manifests[].document_download.href",type:"string",required:!1,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The public url where the manifest documentation can be downloaded."))),(0,s.kt)(f,{name:"manifests[].document_download.data",type:"string",required:!1,mdxType:"Field"},(0,s.kt)(w,{mdxType:"Description"},(0,s.kt)("p",{markdown:!0},"The base64 encoded resource data.")))),(0,s.kt)("h2",{markdown:!0},"Example"),(0,s.kt)(k,{mdxType:"CodeWrapper"},(0,s.kt)("pre",{markdown:!0},(0,s.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function CreateManifest(request) {\n\n  // STEP 1: Validation\n\n  // STEP 2: Create the data that the carrier's API expects\n\n  let data = {\n    operation: \"create_manifest\",\n    session_id: request.metadata.id,\n    create_manifest: request.included_labels.map((label) => {\n      const { tracking_number } = label;\n      const { value : carrier_transaction_id } = label.alternative_identifiers.filter(id => id.type === 'carrier_transaction_id');\n      return {\n        tracking_number: tracking_number,\n        carrier_transaction_id: carrier_transaction_id\n      };\n    }),\n  };\n\n  // STEP 3: Call the carrier's API\n  const response = await apiClient.request({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return formatCreateManifest(response.data);\n}\n")),(0,s.kt)("pre",{markdown:!0},(0,s.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},"import {\n  CreateManifestRequest,\n  CreateManifestResponse\n} from \"@shipengine/connect-carrier-api\";\n\nexport default async function CreateManifest(request: CreateManifestRequest): Promise<CreateManifestResponse> {\n\n  // STEP 1: Validation\n\n  // STEP 2: Create the data that the carrier's API expects\n  let data: CreateManifestAPIRequest = {\n    operation: \"create_manifest\",\n    session_id: request.metadata.id,\n    create_manifest: request.included_labels.map((label) => {\n      const { tracking_number } = label;\n      const { value : carrier_transaction_id } = label.alternative_identifiers.filter(id => id.type === 'carrier_transaction_id');\n      return {\n        tracking_number: tracking_number,\n        carrier_transaction_id: carrier_transaction_id\n      };\n    }),\n  };\n\n  // STEP 3: Call the carrier's API\n  const response = await apiClient.request<CreateManifestAPIResponse>({ data });\n\n  // STEP 4: Create the output data that ShipEngine expects\n  return formatCreateManifest(response.data);\n}\n"))))}b.isMDXComponent=!0},2717:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/beta/reference/methods/create-manifest",function(){return n(9591)}])}},function(e){e.O(0,[1783,2888,9774,179],(function(){return t=2717,e(e.s=t);var t}));var t=e.O();_N_E=t}]);