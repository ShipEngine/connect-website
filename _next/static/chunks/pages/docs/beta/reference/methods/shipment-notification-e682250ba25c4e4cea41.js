(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[754],{7088:function(e,t,n){"use strict";n.r(t),n.d(t,{title:function(){return s},description:function(){return m},createdAt:function(){return c},modifiedAt:function(){return k},default:function(){return x}});var i=n(9016),r=n(3104),o=n(6687),a=n(2320),d=n(1783),p=["components"],s=(o.createElement,"ShipmentNotification Method"),m="This method is called when a shipment is created for one or more items in one or more sales orders.",c=new Date(1653344530651.3293),k=new Date(1653344530651.3293),l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},h=l("CodeWrapper"),u=l("Reference"),f=l("Field"),y=l("Type"),T=l("Description"),w=function(e){return(0,a.kt)(d.Z,(0,r.Z)({title:"ShipmentNotification Method",description:"This method is called when a shipment is created for one or more items in one or more sales orders.",createdAt:new Date(1653344530651),modifiedAt:new Date(1653344530651)},e))};function x(e){var t=e.components,n=(0,i.Z)(e,p);return(0,a.kt)(w,(0,r.Z)({},n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h1"},"ShipmentNotification()")),(0,a.kt)("p",{markdown:!0},"This method is called when a shipment is created for one or more items in one or more sales orders.\nA single shipment may contain items from multiple sales orders, and a single sales order\nmay be fulfilled by multiple shipments."),(0,a.kt)("h2",{markdown:!0},"Syntax"),(0,a.kt)(h,{mdxType:"CodeWrapper"},(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"module.exports = async function ShipmentNotification(request) {\n  // Your code here\n}\n")),(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},'import {\n  ShipmentNotificationRequest,\n  ShipmentNotificationResponse\n  } from "@shipengine/connect-order-source-api";\n\nexport const ShipmentNotification = async (\n  request: ShipmentNotificationRequest\n): Promise<ShipmentNotificationResponse> => {\n  // Your code here\n}\n'))),(0,a.kt)("h2",{markdown:!0},"Parameters"),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"ShipmentNotificationRequest")),(0,a.kt)("p",{markdown:!0},"A request to notify an order source that a order has been shipped."),(0,a.kt)(u,{mdxType:"Reference"},(0,a.kt)(f,{name:"notifications",nullable:!1,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"#shipmentnotification",markdown:!0,parentName:"p"},"shipment notification object[]"))),(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"A list of orders to notify the order source about.")))),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"ShipmentNotification")),(0,a.kt)("p",{markdown:!0},"An individual notification that an order has been shipped."),(0,a.kt)(u,{mdxType:"Reference"},(0,a.kt)(f,{name:"notification_id",type:"string",nullable:!1,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"A unique identifier to correlate this shipment notification with its result in the response."))),(0,a.kt)(f,{name:"order_id",type:"string",nullable:!1,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The unique identifier of the sales order from the order source."))),(0,a.kt)(f,{name:"order_number",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The customer facing identifier of the sales order."))),(0,a.kt)(f,{name:"tracking_number",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The identifier provided by the fulfiller for tracking the delivery progress."))),(0,a.kt)(f,{name:"tracking_url",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The url where the shipment can be tracked."))),(0,a.kt)(f,{name:"carrier_code",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The carrier code the order was shipped through."))),(0,a.kt)(f,{name:"carrier_service_code",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The shipping service used to ship this order."))),(0,a.kt)(f,{name:"ext_location_id",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The order source's identifier for the location that items were shipped from."))),(0,a.kt)(f,{name:"items",nullable:!1,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"#shipmentnotificationitem",markdown:!0,parentName:"p"},"shipment notification item object[]"))),(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The items shipped in this shipment."))),(0,a.kt)(f,{name:"ship_to",nullable:!0,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"/docs/beta/reference/address#order-source-address-object",markdown:!0,parentName:"p"},"order source address object"))),(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Where the shipment was shipped to."))),(0,a.kt)(f,{name:"ship_from",nullable:!0,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"/docs/beta/reference/address#order-source-address-object",markdown:!0,parentName:"p"},"order source address object"))),(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Where the shipment was shipped from."))),(0,a.kt)(f,{name:"return_address",nullable:!0,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"/docs/beta/reference/address#order-source-address-object",markdown:!0,parentName:"p"},"order source address object"))),(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The return address specified on the shipment."))),(0,a.kt)(f,{name:"ship_date",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The datetime associated with when the sales order was shipped. Should always be in UTC and\nformatted per the ",(0,a.kt)("a",{href:"https://tools.ietf.org/html/rfc3339",markdown:!0,parentName:"p"},"https://tools.ietf.org/html/rfc3339")," spec."))),(0,a.kt)(f,{name:"currency",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The (ISO 4217) code describing the currency used for all amounts on this payload."))),(0,a.kt)(f,{name:"fulfillment_cost",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The amount of money it cost to fulfill this shipment."))),(0,a.kt)(f,{name:"notes",nullable:!0,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"/docs/beta/reference/note",markdown:!0,parentName:"p"},"notes object[]"))),(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Additional notes associated with this notification or its sales order."))),(0,a.kt)(f,{name:"insurance_cost",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The total amount of insurance purchased."))),(0,a.kt)(f,{name:"notify_buyer",type:"boolean",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Indicates whether or not the buyer should be notified that this item has been shipped."))),(0,a.kt)(f,{name:"integration_context",type:"string",nullable:!1,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Data provided by the order source that was included in the SalesOrderExport response.")))),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"ShipmentNotificationItem")),(0,a.kt)("p",{markdown:!0},"An individual item in the shipment notification."),(0,a.kt)(u,{mdxType:"Reference"},(0,a.kt)(f,{name:"line_item_id",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The order source's unique identifier for the line item."))),(0,a.kt)(f,{name:"description",type:"string",nullable:!1,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"A description of the sales order item - which may differ from the product description."))),(0,a.kt)(f,{name:"sku",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The stock keeping unit identifier for the item that was shipped."))),(0,a.kt)(f,{name:"product_id",type:"string",nullable:!0,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"Identifier of the product in the vendor API."))),(0,a.kt)(f,{name:"quantity",type:"number",nullable:!1,mdxType:"Field"},(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"The number of items of this SKU that were shipped.")))),(0,a.kt)("h2",{markdown:!0},"Return Value"),(0,a.kt)("h3",{markdown:!0},(0,a.kt)("inlineCode",{markdown:!0,parentName:"h3"},"ShipmentNotificationResult[]")),(0,a.kt)(u,{mdxType:"Reference"},(0,a.kt)(f,{name:"notification_results",required:!0,mdxType:"Field"},(0,a.kt)(y,{mdxType:"Type"},(0,a.kt)("p",{markdown:!0},(0,a.kt)("a",{href:"/docs/beta/reference/shipment-notification-result",markdown:!0,parentName:"p"},"shipment notification result object[]"))),(0,a.kt)(T,{mdxType:"Description"},(0,a.kt)("p",{markdown:!0},"A list of results for shipment notifications.")))),(0,a.kt)("h2",{markdown:!0},"Example"),(0,a.kt)(h,{mdxType:"CodeWrapper"},(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-javascript",markdown:!0,parentName:"pre"},"async function ShipmentNotification(request) {\n  // STEP 1: Validation\n  // Add any desired validation here\n\n  // STEP 2: Create the data that the order source's API expects\n  const thirdPartyRequest = mapRequest(request);\n  // STEP 3: Call the order source's API\n  const response = await callApi(thirdPartyRequest);\n  // Step 4: Create the output data that ShipEngine expects\n  const mappedResponse = mapResponse(response);\n  return mappedResponse;\n}\n")),(0,a.kt)("pre",{markdown:!0},(0,a.kt)("code",{className:"language-typescript",markdown:!0,parentName:"pre"},"export const ShipmentNotification = async (\n  request: ShipmentNotificationRequest\n): Promise<ShipmentNotificationResponse> => {\n  // STEP 1: Validation\n  // Add any desired validation here\n\n  // STEP 2: Create the data that the order source's API expects\n  const thirdPartyRequest = mapRequest(request);\n  // STEP 3: Call the order source's API\n  const response = await callApi(thirdPartyRequest);\n  // Step 4: Create the output data that ShipEngine expects\n  const mappedResponse = mapResponse(response);\n  return mappedResponse;\n};\n"))))}x.isMDXComponent=!0},8017:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/beta/reference/methods/shipment-notification",function(){return n(7088)}])}},function(e){e.O(0,[1783,2888,9774,179],(function(){return t=8017,e(e.s=t);var t}));var t=e.O();_N_E=t}]);